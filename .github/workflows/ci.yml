name: ci

env:
  CMAKE_INSTALL_PREFIX: ~/libs
  CMAKE_PREFIX_PATH: ~/libs
  CTEST_NO_TESTS_ACTION: error

on:
  push:
    paths:
      - "**.c"
      - "**.h"
      - "**.cpp"
      - "**.f90"
      - "**.F90"
      - "**/CMakeLists.txt"
      - "**.cmake"
      - ".github/workflows/ci.yml"

  workflow_dispatch:

# avoid wasted runs
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:

  linux-new:

    runs-on: ubuntu-24.04
    timeout-minutes: 15

    strategy:
      matrix:
        gcc-version: [12, 13, 14]
        shared: [true, false]
        cpp: [true, false]

    env: &gcc-env
      CC: gcc-${{ matrix.gcc-version }}
      CXX: g++-${{ matrix.gcc-version }}
      FC: gfortran-${{ matrix.gcc-version }}

    steps:

    - &checkout
      uses: actions/checkout@v5

    - uses: ./.github/workflows/composite-build


  linux-flang:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    strategy:
      matrix:
        llvm-version: [20]
        cpp: [true, false]
        shared: [false]

    env:
      CC: clang-${{ matrix.llvm-version }}
      CXX: clang++-${{ matrix.llvm-version }}
      FC: flang-${{ matrix.llvm-version }}

    steps:
    - name: Apt LLVM
      run: |
          wget https://apt.llvm.org/llvm.sh
          chmod +x llvm.sh
          sudo ./llvm.sh ${{ matrix.llvm-version }}
          sudo apt-get update

    - name: install Flang
      run: sudo apt install --no-install-recommends clang-${{ matrix.llvm-version }} flang-${{ matrix.llvm-version }}

    - *checkout

    - uses: ./.github/workflows/composite-build


  gcc-9-10-11:

    runs-on: ubuntu-22.04
    timeout-minutes: 15

    strategy:
      fail-fast: false
      matrix:
        gcc-version: [9, 10, 11]
        shared: [false]
        cpp: [true, false]
        include:
        - gcc-version: 11
          shared: true
          cpp: true

    env: *gcc-env

    steps:
    - *checkout
    - uses: ./.github/workflows/composite-build


  gcc-7-8:
    runs-on: ubuntu-latest
    container:
      image: ubuntu:20.04
      env:
        DEBIAN_FRONTEND: noninteractive

    timeout-minutes: 15

    strategy:
      fail-fast: false
      matrix:
        gcc-version: [8]
        shared: [false]
        cpp: [true, false]

    env: *gcc-env

    steps:
    - name: install compilers
      run: |
        apt update -y
        apt install -y --no-install-recommends ca-certificates gpg curl ninja-build ${{ env.CC }} ${{ env.CXX }} ${{ env.FC }}

    - name: install CMake
      run: |
        curl -s https://apt.kitware.com/keys/kitware-archive-latest.asc 2>/dev/null | gpg --dearmor - | tee /usr/share/keyrings/kitware-archive-keyring.gpg >/dev/null
        echo 'deb [signed-by=/usr/share/keyrings/kitware-archive-keyring.gpg] https://apt.kitware.com/ubuntu/ focal main' | tee /etc/apt/sources.list.d/kitware.list >/dev/null
        apt-get update
        test -f /usr/share/doc/kitware-archive-keyring/copyright || rm /usr/share/keyrings/kitware-archive-keyring.gpg
        apt-get install --no-install-recommends -y kitware-archive-keyring
        apt-get install --no-install-recommends -y cmake

    - *checkout

    - uses: ./.github/workflows/composite-build


  cxx-std:
    runs-on: ubuntu-24.04
    timeout-minutes: 15

    strategy:
      matrix:
        cpp-std: [17, 20, 23]
        gcc-version: [14]
        cpp: [true, false]
        shared: [false]

    env: *gcc-env

    steps:

    - *checkout
    - uses: ./.github/workflows/composite-build


  cmake-older:
    timeout-minutes: 30

    runs-on: ubuntu-latest

    strategy:
      matrix:
        cmake_version: ["3.20.6"]

    steps:

    - *checkout

    - uses: ./.github/workflows/composite-cmake

    - name: configure
      run: $CMAKE -Bbuild -DCMAKE_INSTALL_PREFIX:PATH=$(pwd)/build/local -Dffilesystem_BUILD_TESTING=on --log-level=VERBOSE

    - name: build
      run: $CMAKE --build build

    - name: test
      run: $CTEST --test-dir build --output-on-failure

    - name: install package
      run: $CMAKE --install build
