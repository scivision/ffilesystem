on:
  push:
    paths:
      - "**.c"
      - "**.h"
      - "**.cpp"
      - ".github/workflows/ci_lint.yml"
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:

# valgrind needs some simple non-googletest tests perhaps
  valgrind-memory:
    if: false
    runs-on: ubuntu-latest
    continue-on-error: true
    timeout-minutes: 10

    strategy:
      matrix:
        cpp: [true, false]

    steps:
    - name: install valgrind
      run: |
        sudo apt update
        sudo apt install --no-install-recommends valgrind

    - uses: actions/checkout@v4

    - run: ctest -Dopts="-Dffilesystem_cpp:BOOL=${{ matrix.cpp }} -Dffilesystem_BUILD_TESTING:BOOL=on" -S memcheck.cmake -E "overflow|reserved|CLI" -V

    - name: upload Valgrind log
      if: ${{ failure() }}
      uses: actions/upload-artifact@v4
      with:
        name: valgrind-log-${{ matrix.cpp }}
        path: build-Valgrind/Testing/Temporary/MemoryChecker.*.log

#------------------------------
  clang-tidy:
    if: false
    # just saving resources, it works
    runs-on: ubuntu-latest
    timeout-minutes: 10

    strategy:
      matrix:
        cpp: [false,true]

    steps:
    - uses: actions/checkout@v4

    - run: >-
       cmake --preset tidy
       -Dffilesystem_cpp:BOOL=${{ matrix.cpp }}
       -Dffilesystem_fortran:BOOL=off

    - run: cmake --build --preset tidy

#------------------------------
# disabled coverage due to broken Jinja import
  # linux-coverage:
  #   runs-on: ubuntu-latest
  #   needs: linux-new
  #   timeout-minutes: 10

  #   steps:
  #   - uses: actions/checkout@v4
  #   - uses: actions/setup-python@v5
  #     with:
  #       python-version: '3.9'

  #   - name: install Gcovr
  #     run: pip install gcovr

  #   - run: cmake --preset coverage
  #   - run: cmake --build --preset coverage

  #   - name: Code coverage
  #     run: cmake --build --preset run-coverage

  #   - uses: actions/upload-artifact@v4
  #     with:
  #       name: coverage-report-html
  #       path: build-coverage/coverage/
